yaml# GitLab CI Pipeline for Go Bot - Simplified Build Targets
image: golang:1.21-alpine

# Define stages
stages:
  - test
  - build
  - release

# Global variables
variables:
  GO_VERSION: "1.21"
  CGO_ENABLED: "0"
  GOPROXY: "https://proxy.golang.org,direct"

# Cache Go modules for faster builds
cache:
  paths:
    - .cache/go-build/
    - .cache/go-mod/

# Before script - setup environment
before_script:
  - apk add --no-cache git make
  - export GOPATH="$CI_PROJECT_DIR/.cache/go"
  - export GOCACHE="$CI_PROJECT_DIR/.cache/go-build"
  - export GOMODCACHE="$CI_PROJECT_DIR/.cache/go-mod"
  - go version
  - go mod download

# Test stage
test:
  stage: test
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - go test -race -coverprofile=coverage.txt -covermode=atomic ./...
  coverage: '/coverage: \d+\.\d+% of statements/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    expire_in: 1 week
  only:
    - merge_requests
    - main
    - develop

# Build stage - Windows, AMD64, and ARM64 only
build:
  stage: build
  script:
    - mkdir -p dist
    
    # Linux AMD64 (x86_64) - Most common Linux servers
    - GOOS=linux GOARCH=amd64 go build -ldflags="-s -w -X main.version=$CI_COMMIT_SHORT_SHA -X main.buildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ)" -o dist/skyGO-linux-amd64 main.go
    
    # Linux ARM64 (ARM 64-bit) - ARM servers, Raspberry Pi 4+, Apple Silicon servers
    - GOOS=linux GOARCH=arm64 go build -ldflags="-s -w -X main.version=$CI_COMMIT_SHORT_SHA -X main.buildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ)" -o dist/skyGO-linux-arm64 main.go
    
    # Windows AMD64 - For Windows systems
    - GOOS=windows GOARCH=amd64 go build -ldflags="-s -w -X main.version=$CI_COMMIT_SHORT_SHA -X main.buildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ)" -o dist/skyGO-windows-amd64.exe main.go
    
    # Make Linux binaries executable
    - chmod +x dist/skyGO-linux-*
    
    # Show build info
    - ls -la dist/
    - file dist/*
    
  artifacts:
    name: "skyGO-$CI_COMMIT_SHORT_SHA"
    paths:
      - dist/
    expire_in: 1 month
  only:
    - main
    - tags
    - merge_requests

# Release stage - Only for tags
release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - build
  script:
    - echo "Creating release for tag $CI_COMMIT_TAG"
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: 'skyGO Release $CI_COMMIT_TAG'
    tag_name: '$CI_COMMIT_TAG'
    assets:
      links:
        - name: 'Linux AMD64 Binary'
          url: '$CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_TAG/raw/dist/skyGO-linux-amd64?job=build'
        - name: 'Linux ARM64 Binary' 
          url: '$CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_TAG/raw/dist/skyGO-linux-arm64?job=build'
        - name: 'Windows AMD64 Binary'
          url: '$CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_TAG/raw/dist/skyGO-windows-amd64.exe?job=build'
  only:
    - tags
